name: Deploy Infrastructure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  tf_version: '1.11.4'
  tg_version: '0.78.1'
  # TG_PROVIDER_CACHE: 1
  # TG_PROVIDER_CACHE_DIR: ${{ github.workspace }}/.cache

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Cache Terraform provider plugins
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ env.TG_PROVIDER_CACHE_DIR }}
      #     key: terraform-provider-cache-${{ runner.os }}-${{ hashFiles('**/.terraform.lock.hcl') }}
      #     restore-keys: |
      #       terraform-provider-cache-${{ runner.os }}-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::767140398543:role/github-oidc-terraform
          aws-region: eu-central-1

      - name: Terragrunt format check
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_command: hcl fmt --check

      - name: Terragrunt validate
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_command: hcl validate

      - name: Terragrunt plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_command: run --all plan

      - name: Terragrunt apply (only on push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_command: run --all apply --non-interactive
